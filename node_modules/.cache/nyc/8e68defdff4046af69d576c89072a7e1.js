var cov_203njo6s66=function(){var path="C:\\Users\\Ajcat\\Desktop\\CPEN491-Capstone\\SeaChangeBackendServer\\endpoints\\db.js",hash="8efc0e1e7cdc140cf6199794cc6cfdea4e3dd224",Function=function(){}.constructor,global=new Function('return this')(),gcv="__coverage__",coverageData={path:"C:\\Users\\Ajcat\\Desktop\\CPEN491-Capstone\\SeaChangeBackendServer\\endpoints\\db.js",statementMap:{"0":{start:{line:4,column:16},end:{line:4,column:34}},"1":{start:{line:5,column:11},end:{line:5,column:38}},"2":{start:{line:6,column:14},end:{line:6,column:44}},"3":{start:{line:7,column:15},end:{line:7,column:31}},"4":{start:{line:9,column:28},end:{line:9,column:92}},"5":{start:{line:10,column:27},end:{line:10,column:87}},"6":{start:{line:12,column:23},end:{line:12,column:67}},"7":{start:{line:15,column:0},end:{line:54,column:3}},"8":{start:{line:17,column:4},end:{line:53,column:11}},"9":{start:{line:20,column:27},end:{line:20,column:40}},"10":{start:{line:21,column:25},end:{line:21,column:27}},"11":{start:{line:23,column:12},end:{line:28,column:13}},"12":{start:{line:24,column:16},end:{line:27,column:58}},"13":{start:{line:31,column:40},end:{line:39,column:87}},"14":{start:{line:41,column:12},end:{line:49,column:15}},"15":{start:{line:42,column:16},end:{line:48,column:17}},"16":{start:{line:43,column:20},end:{line:43,column:77}},"17":{start:{line:44,column:20},end:{line:44,column:95}},"18":{start:{line:46,column:20},end:{line:46,column:73}},"19":{start:{line:47,column:20},end:{line:47,column:46}},"20":{start:{line:52,column:12},end:{line:52,column:43}},"21":{start:{line:57,column:0},end:{line:125,column:3}},"22":{start:{line:58,column:4},end:{line:123,column:11}},"23":{start:{line:61,column:27},end:{line:61,column:40}},"24":{start:{line:62,column:25},end:{line:62,column:27}},"25":{start:{line:64,column:12},end:{line:78,column:13}},"26":{start:{line:65,column:16},end:{line:77,column:58}},"27":{start:{line:81,column:40},end:{line:109,column:87}},"28":{start:{line:111,column:12},end:{line:119,column:15}},"29":{start:{line:112,column:16},end:{line:118,column:17}},"30":{start:{line:113,column:20},end:{line:113,column:77}},"31":{start:{line:114,column:20},end:{line:114,column:95}},"32":{start:{line:116,column:20},end:{line:116,column:73}},"33":{start:{line:117,column:20},end:{line:117,column:46}},"34":{start:{line:122,column:12},end:{line:122,column:43}},"35":{start:{line:128,column:0},end:{line:168,column:3}},"36":{start:{line:130,column:23},end:{line:130,column:37}},"37":{start:{line:131,column:21},end:{line:131,column:23}},"38":{start:{line:133,column:8},end:{line:140,column:9}},"39":{start:{line:134,column:12},end:{line:139,column:37}},"40":{start:{line:143,column:36},end:{line:157,column:140}},"41":{start:{line:159,column:8},end:{line:167,column:11}},"42":{start:{line:160,column:12},end:{line:166,column:13}},"43":{start:{line:161,column:16},end:{line:161,column:73}},"44":{start:{line:162,column:16},end:{line:162,column:91}},"45":{start:{line:164,column:16},end:{line:164,column:69}},"46":{start:{line:165,column:16},end:{line:165,column:42}},"47":{start:{line:171,column:0},end:{line:174,column:3}},"48":{start:{line:172,column:4},end:{line:172,column:13}},"49":{start:{line:173,column:4},end:{line:173,column:45}},"50":{start:{line:176,column:1},end:{line:176,column:25}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:15,column:31},end:{line:15,column:32}},loc:{start:{line:15,column:51},end:{line:54,column:1}},line:15},"1":{name:"(anonymous_1)",decl:{start:{line:18,column:8},end:{line:18,column:9}},loc:{start:{line:18,column:28},end:{line:50,column:9}},line:18},"2":{name:"(anonymous_2)",decl:{start:{line:41,column:52},end:{line:41,column:53}},loc:{start:{line:41,column:81},end:{line:49,column:13}},line:41},"3":{name:"(anonymous_3)",decl:{start:{line:51,column:8},end:{line:51,column:9}},loc:{start:{line:51,column:28},end:{line:53,column:9}},line:51},"4":{name:"(anonymous_4)",decl:{start:{line:57,column:30},end:{line:57,column:31}},loc:{start:{line:57,column:50},end:{line:125,column:1}},line:57},"5":{name:"(anonymous_5)",decl:{start:{line:59,column:8},end:{line:59,column:9}},loc:{start:{line:59,column:28},end:{line:120,column:9}},line:59},"6":{name:"(anonymous_6)",decl:{start:{line:111,column:52},end:{line:111,column:53}},loc:{start:{line:111,column:81},end:{line:119,column:13}},line:111},"7":{name:"(anonymous_7)",decl:{start:{line:121,column:8},end:{line:121,column:9}},loc:{start:{line:121,column:28},end:{line:123,column:9}},line:121},"8":{name:"(anonymous_8)",decl:{start:{line:128,column:33},end:{line:128,column:34}},loc:{start:{line:128,column:53},end:{line:168,column:1}},line:128},"9":{name:"(anonymous_9)",decl:{start:{line:159,column:48},end:{line:159,column:49}},loc:{start:{line:159,column:77},end:{line:167,column:9}},line:159},"10":{name:"(anonymous_10)",decl:{start:{line:171,column:26},end:{line:171,column:27}},loc:{start:{line:171,column:46},end:{line:174,column:1}},line:171}},branchMap:{"0":{loc:{start:{line:42,column:16},end:{line:48,column:17}},type:"if",locations:[{start:{line:42,column:16},end:{line:48,column:17}},{start:{line:42,column:16},end:{line:48,column:17}}],line:42},"1":{loc:{start:{line:112,column:16},end:{line:118,column:17}},type:"if",locations:[{start:{line:112,column:16},end:{line:118,column:17}},{start:{line:112,column:16},end:{line:118,column:17}}],line:112},"2":{loc:{start:{line:160,column:12},end:{line:166,column:13}},type:"if",locations:[{start:{line:160,column:12},end:{line:166,column:13}},{start:{line:160,column:12},end:{line:166,column:13}}],line:160}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0},b:{"0":[0,0],"1":[0,0],"2":[0,0]},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184"},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();// DB ENDPOINT ROUTES
// ===============================================
const express=(cov_203njo6s66.s[0]++,require('express'));const db=(cov_203njo6s66.s[1]++,require('../components/db'));const axios=(cov_203njo6s66.s[2]++,require('../components/axios'));const router=(cov_203njo6s66.s[3]++,express.Router());const fishBaseFaoAreasUrl=(cov_203njo6s66.s[4]++,"https://fishbase.ropensci.org/faoareas/?limit=5000&AreaCode=21");const fishBaseSpeciesUrl=(cov_203njo6s66.s[5]++,"https://fishbase.ropensci.org/species/?limit=5000&offset=0");const restaurantData=(cov_203njo6s66.s[6]++,require('../json-files/restaurantdata.json'));/* GET. To update the faoareas table in the db */cov_203njo6s66.s[7]++;router.get('/update/faoareas',function(req,res){cov_203njo6s66.f[0]++;cov_203njo6s66.s[8]++;axios.getRequest(fishBaseFaoAreasUrl,function(response){cov_203njo6s66.f[1]++;var jsonData=(cov_203njo6s66.s[9]++,response.data);var values=(cov_203njo6s66.s[10]++,[]);cov_203njo6s66.s[11]++;for(var i=0;i<jsonData.length;i++){cov_203njo6s66.s[12]++;values.push([jsonData[i].autoctr,jsonData[i].AreaCode,jsonData[i].SpecCode,jsonData[i].StockCode,jsonData[i].Status,jsonData[i].Entered,jsonData[i].DateEntered,jsonData[i].Modified,jsonData[i].DateModified,jsonData[i].Expert,jsonData[i].DateChecked,jsonData[i].TS]);}//TODO: Need to figure out best way to store this long query
const insertOrUpdateQuery=(cov_203njo6s66.s[13]++,`INSERT INTO ebdb.FaoAreas (autoctr, AreaCode, SpecCode, StockCode, 
                                                                Status, Entered, DateEntered, Modified,
                                                                DateModified, Expert, DateChecked, TS) 
                                      VALUES ? ON DUPLICATE KEY UPDATE AreaCode = VALUES(AreaCode), SpecCode = VALUES(SpecCode),
                                                                       StockCode = VALUES(StockCode), Status = VALUES(Status),
                                                                       Entered = VALUES(Entered), DateEntered = VALUES(DateEntered),
                                                                       Modified = VALUES(Modified), DateModified = VALUES(DateModified),
                                                                       Expert = VALUES(Expert), DateChecked = VALUES(DateChecked),
                                                                       TS = VALUES(TS)`);cov_203njo6s66.s[14]++;db.query(insertOrUpdateQuery,[values],function(err,rows,fields){cov_203njo6s66.f[2]++;cov_203njo6s66.s[15]++;if(!err){cov_203njo6s66.b[0][0]++;cov_203njo6s66.s[16]++;console.log('Data are updated or inserted successfully');cov_203njo6s66.s[17]++;res.status(200).send('SUCCESS: Data are updated or inserted successfully');}else{cov_203njo6s66.b[0][1]++;cov_203njo6s66.s[18]++;console.log('Error while performing INSERT/UPDATE.');cov_203njo6s66.s[19]++;res.status(500).send(err);}});},function(errorMsg){cov_203njo6s66.f[3]++;cov_203njo6s66.s[20]++;res.status(500).send(errorMsg);});});/* GET. To update the species table in the db */cov_203njo6s66.s[21]++;router.get('/update/species',function(req,res){cov_203njo6s66.f[4]++;cov_203njo6s66.s[22]++;axios.getRequest(fishBaseSpeciesUrl,function(response){cov_203njo6s66.f[5]++;var jsonData=(cov_203njo6s66.s[23]++,response.data);var values=(cov_203njo6s66.s[24]++,[]);cov_203njo6s66.s[25]++;for(var i=0;i<jsonData.length;i++){cov_203njo6s66.s[26]++;values.push([jsonData[i].SpecCode,jsonData[i].Genus,jsonData[i].Species,jsonData[i].SpeciesRefNo,jsonData[i].Author,jsonData[i].FBname,jsonData[i].PicPreferredName,jsonData[i].FamCode,jsonData[i].Subfamily,jsonData[i].GenCode,jsonData[i].BodyShapeI,jsonData[i].Source,jsonData[i].TaxIssue,jsonData[i].Fresh,jsonData[i].Brack,jsonData[i].Saltwater,jsonData[i].DemersPelag,jsonData[i].Amphibious,jsonData[i].AnaCat,jsonData[i].MigratRef,jsonData[i].Vulnerability,jsonData[i].Length,jsonData[i].LTypeMaxM,jsonData[i].MaxLengthRef,jsonData[i].Weight,jsonData[i].UsedforAquaculture,jsonData[i].LifeCycle,jsonData[i].UsedasBait,jsonData[i].Aquarium,jsonData[i].Dangerous,jsonData[i].Electrogenic,jsonData[i].Comments,jsonData[i].Entered,jsonData[i].DateEntered,jsonData[i].Modified,jsonData[i].DateModified,jsonData[i].Expert,jsonData[i].DateChecked,jsonData[i].TS]);}//TODO: Need to figure out best way to store this long query
const insertOrUpdateQuery=(cov_203njo6s66.s[27]++,`INSERT INTO ebdb.Species (SpecCode, Genus, Species, SpeciesRefNo, 
                                                                Author, FBname, PicPreferredName, FamCode,
                                                                Subfamily, GenCode, BodyShapeI, Source,
                                                                TaxIssue, Fresh, Brack, Saltwater,
                                                                DemersPelag, Amphibious, AnaCat, MigratRef,
                                                                Vulnerability, Length, LTypeMaxM, MaxLengthRef,
                                                                Weight, UsedforAquaculture, LifeCycle, UsedasBait,
                                                                Aquarium, Dangerous, Electrogenic, Comments,
                                                                Entered, DateEntered, Modified, DateModified,
                                                                Expert, DateChecked, TS) 
                                      VALUES ? ON DUPLICATE KEY UPDATE Genus = VALUES(Genus), Species = VALUES(Species),
                                                                       SpeciesRefNo = VALUES(SpeciesRefNo), Author = VALUES(Author),
                                                                       FBname = VALUES(FBname), PicPreferredName = VALUES(PicPreferredName),
                                                                       FamCode = VALUES(FamCode), Subfamily = VALUES(Subfamily),
                                                                       GenCode = VALUES(GenCode), BodyShapeI = VALUES(BodyShapeI),
                                                                       TaxIssue = VALUES(TaxIssue), Fresh = VALUES(Fresh),
                                                                       Brack = VALUES(Brack), Saltwater = VALUES(Saltwater),
                                                                       DemersPelag = VALUES(DemersPelag), Amphibious = VALUES(Amphibious),
                                                                       AnaCat = VALUES(AnaCat), MigratRef = VALUES(MigratRef),
                                                                       Vulnerability = VALUES(Vulnerability), Length = VALUES(Length),
                                                                       LTypeMaxM = VALUES(LTypeMaxM), MaxLengthRef = VALUES(MaxLengthRef),
                                                                       Weight = VALUES(Weight), UsedforAquaculture = VALUES(UsedforAquaculture),
                                                                       LifeCycle = VALUES(LifeCycle), UsedasBait = VALUES(UsedasBait),
                                                                       Aquarium = VALUES(Aquarium), Dangerous = VALUES(Dangerous),
                                                                       Electrogenic = VALUES(Electrogenic), Comments = VALUES(Comments),
                                                                       Entered = VALUES(Entered), DateEntered = VALUES(DateEntered),
                                                                       Modified = VALUES(Modified), DateModified = VALUES(DateModified),
                                                                       Expert = VALUES(Expert), DateChecked = VALUES(DateChecked),
                                                                       TS = VALUES(TS)`);cov_203njo6s66.s[28]++;db.query(insertOrUpdateQuery,[values],function(err,rows,fields){cov_203njo6s66.f[6]++;cov_203njo6s66.s[29]++;if(!err){cov_203njo6s66.b[1][0]++;cov_203njo6s66.s[30]++;console.log('Data are updated or inserted successfully');cov_203njo6s66.s[31]++;res.status(200).send('SUCCESS: Data are updated or inserted successfully');}else{cov_203njo6s66.b[1][1]++;cov_203njo6s66.s[32]++;console.log('Error while performing INSERT/UPDATE.');cov_203njo6s66.s[33]++;res.status(500).send(err);}});},function(errorMsg){cov_203njo6s66.f[7]++;cov_203njo6s66.s[34]++;res.status(500).send(errorMsg);});});/* GET. To update the restaurant table in the db */cov_203njo6s66.s[35]++;router.get('/update/restaurant',function(req,res){cov_203njo6s66.f[8]++;var jsonData=(cov_203njo6s66.s[36]++,restaurantData);var values=(cov_203njo6s66.s[37]++,[]);cov_203njo6s66.s[38]++;for(var i=0;i<jsonData.length;i++){cov_203njo6s66.s[39]++;values.push([jsonData[i].isValid,jsonData[i].location_id,jsonData[i].latitude,jsonData[i].longitude,jsonData[i].address_1,jsonData[i].address_2,jsonData[i].city,jsonData[i].province,jsonData[i].country,jsonData[i].postal_code,jsonData[i].phone_number,jsonData[i].phone_number_extension,jsonData[i].website,jsonData[i].partner_name,jsonData[i].partner_category,jsonData[i].partner_type,jsonData[i].fishchoice]);}//TODO: Need to figure out best way to store this long query
const insertOrUpdateQuery=(cov_203njo6s66.s[40]++,`INSERT INTO ebdb.Restaurant (isValid, location_id, latitude, longitude, 
                                                                  address_1, address_2, city, province,
                                                                  country, postal_code, phone_number, phone_number_extension,
                                                                  website, partner_name, partner_category, partner_type,
                                                                  fishchoice) 
                                      VALUES ? ON DUPLICATE KEY UPDATE isValid = VALUES(isValid), location_id = VALUES(location_id),
                                                                       latitude = VALUES(latitude), longitude = VALUES(longitude),
                                                                       address_1 = VALUES(address_1), address_2 = VALUES(address_2),
                                                                       city = VALUES(city), province = VALUES(province),
                                                                       country = VALUES(country), postal_code = VALUES(postal_code),
                                                                       phone_number = VALUES(phone_number), 
                                                                       phone_number_extension = VALUES(phone_number_extension),
                                                                       website = VALUES(website), partner_name = VALUES(partner_name),
                                                                       partner_category = VALUES(partner_category), 
                                                                       partner_type = VALUES(partner_type), fishchoice = VALUES(fishchoice)`);cov_203njo6s66.s[41]++;db.query(insertOrUpdateQuery,[values],function(err,rows,fields){cov_203njo6s66.f[9]++;cov_203njo6s66.s[42]++;if(!err){cov_203njo6s66.b[2][0]++;cov_203njo6s66.s[43]++;console.log('Data are updated or inserted successfully');cov_203njo6s66.s[44]++;res.status(200).send('SUCCESS: Data are updated or inserted successfully');}else{cov_203njo6s66.b[2][1]++;cov_203njo6s66.s[45]++;console.log('Error while performing INSERT/UPDATE.');cov_203njo6s66.s[46]++;res.status(500).send(err);}});});//TODO: ONLY FOR DEBUGGING, REMOVE THIS LATER SINCE IT IS DANGEROUS.
cov_203njo6s66.s[47]++;router.get('/disconnect',function(req,res){cov_203njo6s66.f[10]++;cov_203njo6s66.s[48]++;db.end();cov_203njo6s66.s[49]++;console.log('Disconnected to database.');});cov_203njo6s66.s[50]++;module.exports=router;